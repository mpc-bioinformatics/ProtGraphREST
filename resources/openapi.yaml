openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Swagger ProtGraphRest"
paths:
  /{accession}/path_to_peptide:
    get:
      tags:
      - "Path to Output"
      summary: "Get a peptide, depending on the added path"
      description: ""
      parameters:
      - name: accession
        in: path
        description: "The Protein Accesion (as in UniProt)"
        required: true
        schema:
          type: string
      - name: path
        in: query
        description: "A Path (Integers, seperated by ',' or '->'"
        required: false
        schema:
          type: string
      - name: paths
        in: query
        description: "Multiple paths seperated by ';'"
        required: false
        schema:
          type: string
      - name: returns
        in: query
        description: "Either 'json' or 'text' (DEFAULT: text)"
        required: false
        schema:
          type: string
          enum: ["text", "json"]
      responses:
        "200":
          description: "Returns the peptide(s) either as text or json"
          content:
            application/json:
              examples:
                1 peptide: 
                  value: |
                    [ "PEPTIDE" ]
                2 peptides: 
                  value: |
                    [ "PEPTIDE", "PEPTIDES" ]
            text/plain:
              examples:
                1 peptide: 
                  value: |
                    PEPTIDE
                2 peptides: 
                  value: |
                    PEPTIDE
                    PEPTIDES
    post:
      tags:
      - "Path to Output"
      summary: "Get a peptide, depending on the added path"
      description: ""
      parameters:
      - name: accession
        in: path
        description: "The Protein Accesion (as in UniProt)"
        required: true
        schema:
          type: string
      - name: path
        in: query
        description: "A Path (Integers, seperated by ',' or '->'"
        required: false
        schema:
          type: string
      - name: paths
        in: query
        description: "Multiple paths seperated by ';'"
        required: false
        schema:
          type: string
      - name: returns
        in: query
        description: "Either 'json' or 'text' (DEFAULT: text)"
        required: false
        schema:
          type: string
          enum: ["text", "json"]
        
      requestBody:
          description: "Parameters to be used to retrieve peptides"
          content:
            application/json:
              schema: 
                type: object
                properties:
                  path:
                    type: array
                    items:
                      type: integer
                    example: [0,1,2,3]
                  paths:
                    type: array
                    items:
                      type: array
                      items: 
                        type: integer
                      example: [0,1,2,3]
                  returns:
                    type: string
                    enum: ["text", "json"]
      responses:
        "200":
          description: "Returns the peptide(s) either as text or json"
          content:
            application/json:
              examples:
                1 peptide: 
                  value: |
                    [ "PEPTIDE" ]
                2 peptides: 
                  value: |
                    [ "PEPTIDE", "PEPTIDES" ]
            text/plain:
              examples:
                1 peptide: 
                  value: |
                    PEPTIDE
                2 peptides: 
                  value: |
                    PEPTIDE
                    PEPTIDES
  /{accession}/path_to_fasta:
    get:
      tags:
      - "Path to Output"
      summary: "Get a peptide in FASTA format, depending on the added path"
      description: ""
      parameters:
      - name: accession
        in: path
        description: "The Protein Accesion (as in UniProt)"
        required: true
        schema:
          type: string
      - name: path
        in: query
        description: "A Path (Integers, seperated by ',' or '->'"
        required: false
        schema:
          type: string
      - name: paths
        in: query
        description: "Multiple paths seperated by ';'"
        required: false
        schema:
          type: string
      - name: returns
        in: query
        description: "Either 'json' or 'text' (DEFAULT: text)"
        required: false
        schema:
          type: string
          enum: ["text", "json"]
      responses:
        "200":
          description: "Returns the peptide in FASTA either as text or json"
          content:
            application/json:
              examples:
                1 peptide: 
                  value: |
                    [{"head": ">lcl|PEPTIDE_<ACCESSION>|PATH=<PATH>|QUALIFIERS=<QUALIFIERS>", "seq": "PEPTIDE"}]
                2 peptides: 
                  value: |
                    [{"head": ">lcl|PEPTIDE_<ACCESSION>|PATH=<PATH>|QUALIFIERS=<QUALIFIERS>", "seq": "PEPTIDE"}, {"head": ">lcl|PEPTIDE_<ACCESSION>|PATH=<PATH>|QUALIFIERS=<QUALIFIERS>", "seq": "PEPTIDES"}]
            text/plain:
              examples:
                1 peptide: 
                  value: |
                    >lcl|PEPTIDE_<ACCESSION>|PATH=<PATH>|QUALIFIERS=<QUALIFIERS>
                    PEPTIDE
                2 peptides: 
                  value: |
                    >lcl|PEPTIDE_<ACCESSION>|PATH=<PATH>|QUALIFIERS=<QUALIFIERS>
                    PEPTIDE
                    >lcl|PEPTIDE_<ACCESSION>|PATH=<PATH>|QUALIFIERS=<QUALIFIERS>
                    PEPTIDES
    post:
      tags:
      - "Path to Output"
      summary: "Get a peptide in FASTA format, depending on the added path"
      description: ""
      parameters:
      - name: accession
        in: path
        description: "The Protein Accesion (as in UniProt)"
        required: true
        schema:
          type: string
      - name: path
        in: query
        description: "A Path (Integers, seperated by ',' or '->'"
        required: false
        schema:
          type: string
      - name: paths
        in: query
        description: "Multiple paths seperated by ';'"
        required: false
        schema:
          type: string
      - name: returns
        in: query
        description: "Either 'json' or 'text' (DEFAULT: text)"
        required: false
        schema:
          type: string
          enum: ["text", "json"]
        
      requestBody:
          description: "Parameters to be used to retrieve peptides"
          content:
            application/json:
              schema: 
                type: object
                properties:
                  path:
                    type: array
                    items:
                      type: integer
                    example: [0,1,2,3]
                  paths:
                    type: array
                    items:
                      type: array
                      items: 
                        type: integer
                      example: [0,1,2,3]
                  returns:
                    type: string
                    enum: ["text", "json"]
      responses:
        "200":
          description: "Returns the peptide in FASTA either as text or json"
          content:
            application/json:
              examples:
                1 peptide: 
                  value: |
                    [{"head": ">lcl|PEPTIDE_<ACCESSION>|PATH=<PATH>|QUALIFIERS=<QUALIFIERS>", "seq": "PEPTIDE"}]
                2 peptides: 
                  value: |
                    [{"head": ">lcl|PEPTIDE_<ACCESSION>|PATH=<PATH>|QUALIFIERS=<QUALIFIERS>", "seq": "PEPTIDE"}, {"head": ">lcl|PEPTIDE_<ACCESSION>|PATH=<PATH>|QUALIFIERS=<QUALIFIERS>", "seq": "PEPTIDES"}]
            text/plain:
              examples:
                1 peptide: 
                  value: |
                    >lcl|PEPTIDE_<ACCESSION>|PATH=<PATH>|QUALIFIERS=<QUALIFIERS>
                    PEPTIDE
                2 peptides: 
                  value: |
                    >lcl|PEPTIDE_<ACCESSION>|PATH=<PATH>|QUALIFIERS=<QUALIFIERS>
                    PEPTIDE
                    >lcl|PEPTIDE_<ACCESSION>|PATH=<PATH>|QUALIFIERS=<QUALIFIERS>
                    PEPTIDES
  /{accession}/top_sort/query_mono_weight:
    get:
      tags:
      - "Query Weight"
      summary: "Query for Peptides using the Topological-Sorting-Traversal"
      description: ""
      parameters:
      - name: accession
        in: path
        description: "The Protein Accesion (as in UniProt)"
        required: true
        schema:
          type: string
      - name: unit
        in: query
        description: "Either 'ppm' or 'Da'"
        required: true
        schema:
          type: string
          enum: ["ppm", "Da"]
      - name: mass_tolerance
        in: query
        description: "Number for the mass tolerance."
        required: true
        schema:
          type: number
      - name: mono_weight
        in: query
        description: "The weight which you want to query."
        required: true
        schema:
          type: number
      - name: timeout
        in: query
        description: "The timeout in seconds, how long you want to wait, before exiting (Default: 10000)"
        required: false
        schema:
          type: number
      - name: k
        in: query
        description: "The number of intervals to be used per node. Default: 10"
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the search results as json."
          content:
            application/json:
              examples:
                Search Results: 
                  value: |
                    {
                      "time": 0.002875176000088686, 
                      "results": [
                        {"path": [0, 24, 25, 9], "weight": 3394.719756833, "seq": "SGLSVYNPTPYYVSFNNAELIAGGKSNPLNVK"}
                        ]
                    }
    post:
      tags:
      - "Query Weight"
      summary: "Query for Peptides using the Topological-Sorting-Traversal"
      description: ""
      parameters:
      - name: accession
        in: path
        description: "The Protein Accesion (as in UniProt)"
        required: true
        schema:
          type: string
      requestBody:
          description: "Parameters to be used to retrieve peptides"
          content:
            application/json:
              schema: 
                type: object
                properties:
                  unit:
                    type: string
                    enum: ["ppm", "Da"]
                  mass_tolerance:
                    type: number
                    example: 5
                  mono_weight:
                    type: number
                    example: 3300
                  timeout:
                    type: number
                    example: 10000
                  k:
                    type: integer
                    example: 10
      responses:
        "200":
          description: "Returns the search results as json."
          content:
            application/json:
              examples:
                Search Results: 
                  value: |
                    {
                      "time": 0.002875176000088686, 
                      "results": [
                        {"path": [0, 24, 25, 9], "weight": 3394.719756833, "seq": "SGLSVYNPTPYYVSFNNAELIAGGKSNPLNVK"}
                        ]
                    }
  /{accession}/top_sort_attrs/query_mono_weight:
    get:
      tags:
      - "Query Weight"
      summary: "Query for Peptides using the Topological-Sorting-Traversal"
      description: ""
      parameters:
      - name: accession
        in: path
        description: "The Protein Accesion (as in UniProt)"
        required: true
        schema:
          type: string
      - name: unit
        in: query
        description: "Either 'ppm' or 'Da'"
        required: true
        schema:
          type: string
          enum: ["ppm", "Da"]
      - name: mass_tolerance
        in: query
        description: "Number for the mass tolerance."
        required: true
        schema:
          type: number
      - name: mono_weight
        in: query
        description: "The weight which you want to query."
        required: true
        schema:
          type: number
      - name: timeout
        in: query
        description: "The timeout in seconds, how long you want to wait, before exiting (Default: 10000)"
        required: false
        schema:
          type: number
      - name: k
        in: query
        description: "The number of intervals to be used per node. Default: 10"
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the search results as json."
          content:
            application/json:
              examples:
                Search Results: 
                  value: |
                    {
                      "time": 0.002875176000088686, 
                      "results": [
                        {"path": [0, 24, 25, 9], "weight": 3394.719756833, "seq": "SGLSVYNPTPYYVSFNNAELIAGGKSNPLNVK"}
                        ]
                    }
    post:
      tags:
      - "Query Weight"
      summary: "Query for Peptides using the Topological-Sorting-Traversal"
      description: ""
      parameters:
      - name: accession
        in: path
        description: "The Protein Accesion (as in UniProt)"
        required: true
        schema:
          type: string
      requestBody:
          description: "Parameters to be used to retrieve peptides"
          content:
            application/json:
              schema: 
                type: object
                properties:
                  unit:
                    type: string
                    enum: ["ppm", "Da"]
                  mass_tolerance:
                    type: number
                    example: 5
                  mono_weight:
                    type: number
                    example: 3300
                  timeout:
                    type: number
                    example: 10000
                  k:
                    type: integer
                    example: 10
      responses:
        "200":
          description: "Returns the search results as json."
          content:
            application/json:
              examples:
                Search Results: 
                  value: |
                    {
                      "time": 0.002875176000088686, 
                      "results": [
                        {"path": [0, 24, 25, 9], "weight": 3394.719756833, "seq": "SGLSVYNPTPYYVSFNNAELIAGGKSNPLNVK"}
                        ]
                    }
  /{accession}/bfs_fifo/query_mono_weight:
    get:
      tags:
      - "Query Weight"
      summary: "Query for Peptides using the Breadth-First-Search. Classic Implementation"
      description: ""
      parameters:
      - name: accession
        in: path
        description: "The Protein Accesion (as in UniProt)"
        required: true
        schema:
          type: string
      - name: unit
        in: query
        description: "Either 'ppm' or 'Da'"
        required: true
        schema:
          type: string
          enum: ["ppm", "Da"]
      - name: mass_tolerance
        in: query
        description: "Number for the mass tolerance."
        required: true
        schema:
          type: number
      - name: mono_weight
        in: query
        description: "The weight which you want to query."
        required: true
        schema:
          type: number
      - name: timeout
        in: query
        description: "The timeout in seconds, how long you want to wait, before exiting (Default: 10000)"
        required: false
        schema:
          type: number
      - name: k
        in: query
        description: "The number of intervals to be used per node. Default: 10"
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the search results as json."
          content:
            application/json:
              examples:
                Search Results: 
                  value: |
                    {
                      "time": 0.002875176000088686, 
                      "results": [
                        {"path": [0, 24, 25, 9], "weight": 3394.719756833, "seq": "SGLSVYNPTPYYVSFNNAELIAGGKSNPLNVK"}
                        ]
                    }
    post:
      tags:
      - "Query Weight"
      summary: "Query for Peptides using the Breadth-First-Search. Classic Implementation"
      description: ""
      parameters:
      - name: accession
        in: path
        description: "The Protein Accesion (as in UniProt)"
        required: true
        schema:
          type: string
      requestBody:
          description: "Parameters to be used to retrieve peptides"
          content:
            application/json:
              schema: 
                type: object
                properties:
                  unit:
                    type: string
                    enum: ["ppm", "Da"]
                  mass_tolerance:
                    type: number
                    example: 5
                  mono_weight:
                    type: number
                    example: 3300
                  timeout:
                    type: number
                    example: 10000
                  k:
                    type: integer
                    example: 10
      responses:
        "200":
          description: "Returns the search results as json."
          content:
            application/json:
              examples:
                Search Results: 
                  value: |
                    {
                      "time": 0.002875176000088686, 
                      "results": [
                        {"path": [0, 24, 25, 9], "weight": 3394.719756833, "seq": "SGLSVYNPTPYYVSFNNAELIAGGKSNPLNVK"}
                        ]
                    }     
  /{accession}/bfs_filo/query_mono_weight:
    get:
      tags:
      - "Query Weight"
      summary: "Query for Peptides using the Breadth-First-Search. FILO Implementation"
      description: ""
      parameters:
      - name: accession
        in: path
        description: "The Protein Accesion (as in UniProt)"
        required: true
        schema:
          type: string
      - name: unit
        in: query
        description: "Either 'ppm' or 'Da'"
        required: true
        schema:
          type: string
          enum: ["ppm", "Da"]
      - name: mass_tolerance
        in: query
        description: "Number for the mass tolerance."
        required: true
        schema:
          type: number
      - name: mono_weight
        in: query
        description: "The weight which you want to query."
        required: true
        schema:
          type: number
      - name: timeout
        in: query
        description: "The timeout in seconds, how long you want to wait, before exiting (Default: 10000)"
        required: false
        schema:
          type: number
      - name: k
        in: query
        description: "The number of intervals to be used per node. Default: 10"
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the search results as json."
          content:
            application/json:
              examples:
                Search Results: 
                  value: |
                    {
                      "time": 0.002875176000088686, 
                      "results": [
                        {"path": [0, 24, 25, 9], "weight": 3394.719756833, "seq": "SGLSVYNPTPYYVSFNNAELIAGGKSNPLNVK"}
                        ]
                    }
    post:
      tags:
      - "Query Weight"
      summary: "Query for Peptides using the Breadth-First-Search. FILO Implementation"
      description: ""
      parameters:
      - name: accession
        in: path
        description: "The Protein Accesion (as in UniProt)"
        required: true
        schema:
          type: string
      requestBody:
          description: "Parameters to be used to retrieve peptides"
          content:
            application/json:
              schema: 
                type: object
                properties:
                  unit:
                    type: string
                    enum: ["ppm", "Da"]
                  mass_tolerance:
                    type: number
                    example: 5
                  mono_weight:
                    type: number
                    example: 3300
                  timeout:
                    type: number
                    example: 10000
                  k:
                    type: integer
                    example: 10
      responses:
        "200":
          description: "Returns the search results as json."
          content:
            application/json:
              examples:
                Search Results: 
                  value: |
                    {
                      "time": 0.002875176000088686, 
                      "results": [
                        {"path": [0, 24, 25, 9], "weight": 3394.719756833, "seq": "SGLSVYNPTPYYVSFNNAELIAGGKSNPLNVK"}
                        ]
                    }     
  /{accession}/dfs/query_mono_weight:
    get:
      tags:
      - "Query Weight"
      summary: "Query for Peptides using the Depth-First-Search."
      description: ""
      parameters:
      - name: accession
        in: path
        description: "The Protein Accesion (as in UniProt)"
        required: true
        schema:
          type: string
      - name: unit
        in: query
        description: "Either 'ppm' or 'Da'"
        required: true
        schema:
          type: string
          enum: ["ppm", "Da"]
      - name: mass_tolerance
        in: query
        description: "Number for the mass tolerance."
        required: true
        schema:
          type: number
      - name: mono_weight
        in: query
        description: "The weight which you want to query."
        required: true
        schema:
          type: number
      - name: timeout
        in: query
        description: "The timeout in seconds, how long you want to wait, before exiting (Default: 10000)"
        required: false
        schema:
          type: number
      - name: k
        in: query
        description: "The number of intervals to be used per node. Default: 10"
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: "Returns the search results as json."
          content:
            application/json:
              examples:
                Search Results: 
                  value: |
                    {
                      "time": 0.002875176000088686, 
                      "results": [
                        {"path": [0, 24, 25, 9], "weight": 3394.719756833, "seq": "SGLSVYNPTPYYVSFNNAELIAGGKSNPLNVK"}
                        ]
                    }
    post:
      tags:
      - "Query Weight"
      summary: "Query for Peptides using the Depth-First-Search."
      description: ""
      parameters:
      - name: accession
        in: path
        description: "The Protein Accesion (as in UniProt)"
        required: true
        schema:
          type: string
      requestBody:
          description: "Parameters to be used to retrieve peptides"
          content:
            application/json:
              schema: 
                type: object
                properties:
                  unit:
                    type: string
                    enum: ["ppm", "Da"]
                  mass_tolerance:
                    type: number
                    example: 5
                  mono_weight:
                    type: number
                    example: 3300
                  timeout:
                    type: number
                    example: 10000
                  k:
                    type: integer
                    example: 10
      responses:
        "200":
          description: "Returns the search results as json."
          content:
            application/json:
              examples:
                Search Results: 
                  value: |
                    {
                      "time": 0.002875176000088686, 
                      "results": [
                        {"path": [0, 24, 25, 9], "weight": 3394.719756833, "seq": "SGLSVYNPTPYYVSFNNAELIAGGKSNPLNVK"}
                        ]
                    }     